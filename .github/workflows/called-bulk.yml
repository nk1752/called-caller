name: called-bulk

on:
  workflow_call:
    inputs:
      bg:
        type: string
        required: true
      env:
        type: string
        required: true
      env_name:
        type: string
        required: true
      size:
        type: string
        required: false
        default: "small"
      no:
        type: string
        required: false
        default: "1"

jobs:
  reuse-job:
    runs-on: ubuntu-latest

    steps:
      - name: print inputs
        run: |
          echo "bg: ${{ inputs.bg }}"
          echo "env: ${{ inputs.env }}"
          echo "env_name: ${{ inputs.env_name }}"
          echo "size: ${{ inputs.size }}"
          echo "no: ${{ inputs.no }}"

      - name: checkout
        uses: actions/checkout@v4.1.6

      - name: read config
        id: json
        run: |
          
          for key in $(jq -r 'keys[]' config.json); do
            echo "Key: $key"
          
            bg=$key
            echo "bg=$bg" >> $GITHUB_OUTPUT
            bg_lower=$(echo $bg | tr 'A-Z' 'a-z')
            echo "bg_lower=$bg_lower" >> $GITHUB_OUTPUT

            env=$(echo ${{inputs.env}} | tr 'A-Z' 'a-z')
            echo "env=$env" >> $GITHUB_OUTPUT

            if [[ "$env" == "dev" ]]; then
              env_id=$(jq -r '.${{inputs.bg}}.DEV' config.json)
            elif [[ "$env" == "prod" ]]; then
              env_id=$(jq -r '.${{inputs.bg}}.PROD' config.json)
            elif [[ "$env" == "qa" ]]; then
              env_id=$(jq -r '.${{inputs.bg}}.QA' config.json)
            else
              echo "Invalid env"
              exit 1
            fi

          done

          echo "env_id: $env_id"
          echo "env_id=$env_id" >> $GITHUB_OUTPUT

      - name: display
        run: |
 
          echo "bg: ${{steps.json.outputs.bg}}"
          echo "bg_lower: ${{steps.json.outputs.bg_lower}}"
          echo "env_name: ${{steps.json.outputs.env_name}}"
          echo "env_id: ${{steps.json.outputs.env_id}}"

          
          

          
          