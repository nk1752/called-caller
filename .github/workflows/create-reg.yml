name: create registration

on:
  workflow_call:
    inputs:
      obj:
        type: string
        required: true

jobs:
  register-renew:
    runs-on: ubuntu-latest

    steps:
      - name: echo
        run: |
          echo "caller send: ${{ inputs.obj }}"

      - name: checkout
        uses: actions/checkout@v4.1.6

      - name: read config
        run: |
          echo "reading config"
          jq . config.json

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: pull image
        run: |
          docker pull mulesoft/flex-gateway:latest

      # list docker images
      - name: list docker images
        run: |
          docker images

      # check os version on ubuntu
      - name: check os version
        run: |
          cat /etc/os-release

      - name: make temp directory
        run: |
          mkdir -p temp
          mkdir -p renew
          ls -l

      - name: get secrets
        run: |
          echo "getting secrets..."
          

      - name: search
        id: search
        run: |
          # iterate over the config.json elements
          for key in $(jq -r 'keys[]' config.json); do
            echo "*************************"
            echo "key: $key"
            echo "*************************"
            
            if [[ "$key" == ${{inputs.obj}} ]]
            then  
              echo "found match! $oper ${{inputs.obj}}"

              jq -r .$key.oper config.json

              oper=$(jq -r ".$key.oper" config.json)
              echo "oper=$oper" >> $GITHUB_OUTPUT
              bg=$(jq -r ".$key.bg" config.json)
              echo "bg=$bg" >> $GITHUB_OUTPUT
              env=$(jq -r ".$key.env" config.json)
              echo "env=$env" >> $GITHUB_OUTPUT
              size=$(jq -r ".$key.size" config.json)
              echo "size=$size" >> $GITHUB_OUTPUT
              no=$(jq -r ".$key.no" config.json)
              echo "no=$no" >> $GITHUB_OUTPUT
              echo "fgw-name=fgw-$bg-$env-$size-$no" >> $GITHUB_OUTPUT

              break
            else
              echo "skipping --> ${{inputs.obj}}"
            fi  
          done # end of for loop

      - name: check variables
        run: |
          echo oper=${{steps.search.outputs.oper}}
          echo bg=${{steps.search.outputs.bg}}
          echo env=${{steps.search.outputs.env}}
          echo size=${{steps.search.outputs.size}}
          echo no=${{steps.search.outputs.no}}
          echo fgw-name=${{steps.search.outputs.fgw-name}}
              
      - name: check for register 
        if: ${{steps.search.outputs.oper == 'register'}}
        run: |
          echo "oper=${{steps.search.outputs.oper}}"
          echo fgw-name=${{steps.search.outputs.fgw-name}}

          sudo docker run --entrypoint flexctl \
            -v "$(pwd)":/registration \
            -u $UID mulesoft/flex-gateway \
            registration create \
            --client-id=b95726291f564ae2942ac2c4ecc46311 \
            --client-secret=59dB6D7A84bd442bAfE7422233a82902 \
            --environment=2c6f18bb-03e2-4874-a489-7216df5b5bc2 \
            --connected=true \
            --organization=a6ea8ce7-6d5f-41ee-a802-5505e8833854 \
            --output-directory=/registration \
            "${{steps.search.outputs.fgw-name}}"
          
          
      - name: check for renew 
        if: ${{steps.search.outputs.oper == 'renew'}}
        run: |
          echo "oper=${{steps.search.outputs.oper}}"
          echo fgw-name=${{steps.search.outputs.fgw-name}}

          sudo docker exec -u $UID "${{steps.search.outputs.fgw-name}}" flexctl registration inspect

          sudo docker run --entrypoint flexctl \
            -v "$(pwd)/renew":/renew \
            -v "$(pwd)/temp":/registration \
            -u $UID mulesoft/flex-gateway \
            registration renew \
            --client-id=b95726291f564ae2942ac2c4ecc46311 \
            --client-secret=59dB6D7A84bd442bAfE7422233a82902 \
            --output-directory=/renew \
            /registration/registration.yaml
          
      - name: cleanup
        run: |
          echo "cleaning up..."
          rm -rf temp
          rm -rf renew
          ls -l
