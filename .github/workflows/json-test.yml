name: json testing

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  id-token: write

env:
  obj: "fgw1"

jobs:
  json-test:
    runs-on: ubuntu-latest

    steps:
      - name: echo
        run: |
          echo "caller send: ${{ env.obj }}"

      - name: checkout
        uses: actions/checkout@v4.1.6

      - name: read config
        run: |
          echo "reading config"
          jq . config.json

      - name: search
        id: search
        run: |
          # iterate over the config.json elements
          for key in $(jq -r 'keys[]' config.json); do
            echo "*************************"
            echo "key: $key"
            echo "*************************"
            
            if [ -z "$key" ]; then
              echo "key is empty"
              continue
            fi

            if [ "$key" == "null" ]; then
              echo "key is null"
              continue
            fi

            if [[ "$key" == ${{env.obj}} ]]; then
              
              # get the value of the key
              oper=$(jq -r ".$key.oper" config.json)
              echo "oper=$oper" >> $GITHUB_OUTPUT
              bg=$(jq -r ".$key.bg" config.json)
              echo "bg=$bg" >> $GITHUB_OUTPUT
              env=$(jq -r ".$key.env" config.json)
              echo "env=$env" >> $GITHUB_OUTPUT
              size=$(jq -r ".$key.size" config.json)
              echo "size=$size" >> $GITHUB_OUTPUT
              no=$(jq -r ".$key.no" config.json)
              echo "no=$no" >> $GITHUB_OUTPUT

              break
            fi

            
          done # end of for loop
        
      - name: check variables
        run: |
          set -e
          echo oper=${{steps.search.outputs.oper}}
          echo bg=${{steps.search.outputs.bg}}
          echo env=${{steps.search.outputs.env}}
          echo size=${{steps.search.outputs.size}}
          echo no=${{steps.search.outputs.no}}
          
          name=nadeem-${{env.obj}}
          echo $name

          fgw-name=fgw-${{steps.search.outputs.bg}}-${{steps.search.outputs.env}}-${{steps.search.outputs.size}}-${{steps.search.outputs.no}}
          echo $fgw-name

          
