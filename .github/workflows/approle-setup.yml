name: vault

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:

env:
  VAULT_ADDR: "https://nk1752-cluster-public-vault-55c83db1.9e78ed07.z1.hashicorp.cloud:8200"
  VAULT_NAMESPACE: "admin"

jobs:
  Variables:
    runs-on: ubuntu-latest
    permissions:
      contents: read # read|write|none
      id-token: write # read|write|none

    steps:

      - name: checkout repo
        uses: actions/checkout@v3.0.0

      - uses: eLco/setup-vault@v1
        with:
          vault_version: "1.12.0"

      - name: login to vault using approle
        id: login
        run: |
          curl -s \
            -H "X-Vault-Namespace: ${{env.VAULT_NAMESPACE}}" \
            -X POST --data '{"role_id": "fac0c25b-9db2-5a65-5363-a7dafc1816b3", "secret_id": "5f56705a-33f1-ee2d-7b08-4ef736f68af9"}' \
            ${{env.VAULT_ADDR}}/v1/auth/approle/login > vault_token.json

          jq . vault_token.json

          echo "CLIENT_TOKEN=$(jq -r '.auth.client_token' vault_token.json)" >> $GITHUB_OUTPUT

      - name: read secret
        run: |
          curl \
            -H "X-Vault-Token: $CLIENT_TOKEN" \
            -H "X-Vault-Namespace: ${{env.VAULT_NAMESPACE}}" \
            -X GET \
            ${{env.VAULT_ADDR}}/v1/secret/data/sample-secret > secret.json

          jq . secret.json

      - name: write secret
        run: |
          curl \
            -H "X-Vault-Token: $CLIENT_TOKEN" \
            -H "X-Vault-Namespace: ${{env.VAULT_NAMESPACE}}" \
            -H "Content-Type: application/ymal" \
            -X POST \
            --data @registration.yaml \
            ${{env.VAULT_ADDR}}/v1/secret/data/sample-secret > secret.json

          jq . secret.json